# -*- coding: utf-8 -*-
"""Kmeans.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e1mEEdXyQpvD5MSMYjdZRl8gFoqjdDvd
"""

from sklearn.cluster import KMeans
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
import seaborn as sns

data = pd.read_csv('/content/sample_data/churn.csv')
data = data.drop(columns='Exited')
data1 = list(data.columns)[3:-1]
data = data[data1]

# France = 0 , Germany = 1, Spain = 2
for geography in range(len(list(data['Geography']))) :
  if data['Geography'][geography] == 'France' :
    data['Geography'][geography] = 0
  elif data['Geography'][geography] == 'Germany' :
    data['Geography'][geography] = 1
  else:
    data['Geography'][geography] = 2

#Female= 0 , Male = 1
for gender in range(len(list(data['Gender']))):
  if data['Gender'][gender] == 'Female':
    data['Gender'][gender] = 0
  else:
    data['Gender'][gender] = 1

inertia = []
for i in range(1,11):
  kmean = KMeans(n_clusters=i)
  kmean.fit(data)
  inertia.append(kmean.inertia_)

plt.plot(range(1,11),inertia,marker='o')
plt.title('Elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')
plt.show()

kmeans = KMeans(n_clusters=2)
data['clusters'] = kmeans.fit_predict(data)

### Run PCA on the data and reduce the dimensions in pca_num_components dimensions

pca_num_components = 2

reduced_data = PCA(n_components=pca_num_components).fit_transform(data)
results = pd.DataFrame(reduced_data,columns=['pca1','pca2'])

sns.scatterplot(x="pca1", y="pca2", hue=data['clusters'], data=results)
plt.title('K-means Clustering with 2 dimensions')
plt.show()

data